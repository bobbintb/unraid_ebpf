name: Workflow template
on:
  workflow_dispatch:
jobs:
  slackbuild_and_upload:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    container:
      image: bobbintb/unraid-cicd-base
      options: --privileged
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v4
    - name: Cache packages
      id: cache-packages
      uses: actions/cache@v4
      with:
        path: /var/cache/packages
        key: slackware-packages-${{ github.sha }}
        restore-keys: |
          slackware-packages-
        # key: ${{ runner.os }}-slackpkg-${{ hashFiles('**/package-list.txt') }}
        # restore-keys: |
        #   ${{ runner.os }}-slackpkg-
        #key: slackpkg-${{ runner.os }}-${{ inputs.VERSION }}-${{ hashFiles('SlackBuilds/**/*') }}
        #restore-keys: |
        #  slackpkg-${{ runner.os }}-${{ inputs.VERSION }}-
    - 
      name: Install slackpkg
      run: |
        mkdir /pkgs
        cd /pkgs
        wget -nd --recursive --level=1 --accept "gnupg2-*-x86_64-*.txz, libassuan-*-x86_64-*.txz, npth-*-x86_64-*.txz, libksba-*-x86_64-*.txz" https://slackware.uk/slackware/slackware64-15.0/slackware64/n/
        wget -nd --recursive --level=1 --accept "slackpkg-*-noarch-*.txz" https://slackware.uk/slackware/slackware64-current/slackware64/ap/
        wget -nd --recursive --level=1 --accept "slackpkg+-*-noarch-*.txz" https://mirrors.slackware.com/slackware/slackware64-current/extra/slackpkg+/
        wget $(wget -qO- https://api.github.com/repos/sbopkg/sbopkg/releases/latest | grep '"browser_download_url":' | cut -d '"' -f 4 | grep 'sbopkg-.*-noarch-.*\.tgz')
        wget $(curl -s https://api.github.com/repos/bobbintb/Slackware_Packages/contents/builds/slackrepo | grep -o '"download_url": "[^"]*slackrepo-[^"]*-noarch-[^"]*\.tgz"' | cut -d'"' -f4 | head -n 1)
        installpkg /pkgs/*
        rm -dr /pkgs/
        CONF_FILE="/etc/slackpkg/slackpkg.conf"
        sed -i "s/^DIALOG=.*/DIALOG=off/" "$CONF_FILE"
        sed -i "s/^BATCH=.*/BATCH=on/" "$CONF_FILE"
        sed -i "s/^DEFAULT_ANSWER=.*/DEFAULT_ANSWER=y/" "$CONF_FILE"
        echo "https://mirrors.slackware.com/slackware/slackware64-15.0/" >> /etc/slackpkg/mirrors
        sed -i 's/CACHEUPDATE=off/CACHEUPDATE=on/' /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['alien-multilib-15']=http://slackware.nl/people/alien/multilib/15.0/" >> /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['alien-multilib-current']=http://slackware.nl/people/alien/multilib/current/" >> /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['alien-15']=https://slackware.nl/people/alien/sbrepos/15.0/x86_64/" >> /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['alien-current']=http://slackware.nl/people/alien/sbrepos/current/x86_64/" >> /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['alien-restr-15']=https://slackware.nl/people/alien/restricted_sbrepos/15.0/x86_64/" >> /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['alien-restr-cur']=https://slackware.nl/people/alien/restricted_sbrepos/current/x86_64/" >> /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['alien-slackbuilds']=https://slackware.nl/people/alien/slackbuilds/" >> /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['conraid-cur']=https://slackers.it/repository/slackware64-current/" >> /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['conraid-extra']=https://slackers.it/repository/slackware64-current-extra/" >> /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['conraid-testing']=https://slackers.it/repository/slackware64-current-testing/" >> /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['csb-15']=https://slackware.uk/csb/15.0/x86_64/" >> /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['csb-cur']=https://slackware.uk/csb/current/x86_64/" >> /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['msb-15']=https://slackware.uk/msb/15.0/latest/x86_64/" >> /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['msb-cur']=https://slackware.uk/msb/current/latest/x86_64/" >> /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['ponce-current']=https://ponce.cc/slackware/slackware64-current/packages/" >> /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['salix-15']=https://download.salixos.org/x86_64/15.0/" >> /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['salix-extra-15']=https://download.salixos.org/x86_64/extra-15.0/" >> /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['slackel-cur']=http://www.slackel.gr/repo/x86_64/current/" >> /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['slackonly-15']=https://packages.slackonly.com/pub/packages/15.0-x86_64/" >> /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['slackonly-current']=https://packages.slackonly.com/pub/packages/current-x86_64/" >> /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['slint']=https://slackware.uk/slint/x86_64/slint-15.0/" >> /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['official-15+extra']=https://ftp.osuosl.org/pub/slackware/slackware64-15.0/" >> /etc/slackpkg/slackpkgplus.conf
        echo "#MIRRORPLUS['bobbintb']=https://raw.githubusercontent.com/bobbintb/Slackware_Packages/refs/heads/main/builds/" >> /etc/slackpkg/slackpkgplus.conf
        slackpkg update <<< y
        slackpkg update gpg <<< y
        cd /
        sed -i 's/--passphrase-fd 0/--pinentry-mode loopback/' /usr/libexec/slackrepo/gen_repos_files.sh
        chmod +x /usr/libexec/slackrepo/gen_repos_files.sh
        sbopkg -r
        slackpkg install slackware64:python3 slackware64:python-pip slackware64:pkg-config
        slackpkg reinstall slackware64:zlib slackware64:elfutils slackware64:zstd slackware64:glibc slackware64:jemalloc
        rm -dr /root/.gnupg/
    - 
      name: Update slackpkg
      run: |
        slackpkg update || true
        # slackpkg upgrade-all || true
        slackpkg install make guile gc gcc kernel-headers binutils gettext pahole bc libbpf bison m4 squashfs || true
        
        . /etc/os-release
        json=$(curl -s https://releases.unraid.net/usb-creator)
        url=$(echo "$json" | jq -r '.. | objects | select(.name == "'"Unraid $VERSION_ID"'") | .url')
        filename=$(basename "${url}")
        
        echo -n "You are running Unraid ${VERSION_ID}. Downloading... "
        [ -f $filename ] || wget $url
        echo "done."
        echo -n "Extracting Unraid... "
        unzip -o -q $filename -d unRAIDServer
        echo "done."
        cd unRAIDServer
        
        echo -n "Determining kernel version needed for Unraid... "
        KERNEL_VERSION=$(file bzimage | awk -F'version ' '{print $2}' | cut -d' ' -f1 | cut -d'-' -f1)
        MAJOR_VERSION=${KERNEL_VERSION%%.*}
        echo "${KERNEL_VERSION}"
        echo -n "Downloading Linux kernel ${KERNEL_VERSION}... "
        cd ..
        [ -f linux-${KERNEL_VERSION}.tar.xz ] || wget https://cdn.kernel.org/pub/linux/kernel/v${MAJOR_VERSION}.x/linux-${KERNEL_VERSION}.tar.xz
        echo "done."
        
        mkdir -p linux
        echo -n "Extracting Linux kernel... "
        tar xf linux-${KERNEL_VERSION}.tar.xz -C linux --strip-components 1
        echo "done."
        
        cd unRAIDServer
        unsquashfs -d patches bzfirmware src
        cd ..
        echo -n "Copying patches... "
        cp -r unRAIDServer/patches/src/linux-*-Unraid/. linux/
        
        cd linux
        find . -type f -iname '*.patch' -print0 | xargs -n1 -0 patch -p1 -i
        ./scripts/config --enable CONFIG_MD_UNRAID \
            --enable CONFIG_DEBUG_INFO \
            --disable CONFIG_DEBUG_INFO_NONE \
            --enable CONFIG_DEBUG_INFO_DWARF5 \
            --disable CONFIG_DEBUG_INFO_REDUCED \
            --enable CONFIG_DEBUG_INFO_COMPRESSED_NONE \
            --disable CONFIG_DEBUG_INFO_COMPRESSED_ZLIB \
            --disable CONFIG_DEBUG_INFO_COMPRESSED_ZSTD \
            --disable CONFIG_DEBUG_INFO_SPLIT \
            --enable CONFIG_DEBUG_INFO_BTF \
            --enable CONFIG_PAHOLE_HAS_SPLIT_BTF \
            --enable CONFIG_PAHOLE_HAS_LANG_EXCLUDE \
            --enable CONFIG_DEBUG_INFO_BTF_MODULES \
            --disable CONFIG_MODULE_ALLOW_BTF_MISMATCH \
            --disable CONFIG_GDB_SCRIPTS \
            --enable CONFIG_PROBE_EVENTS_BTF_ARGS \
            --disable CONFIG_SCHED_CLASS_EXT
        make oldconfig
        bzimagename=bzimage-${VERSION_ID}
        make -j$(nproc) bzImage
        mv arch/x86/boot/bzImage ../$bzimagename
        cd ..
        rm -dr ./linux/
        rm -dr ./unRAIDServer/
        rm unRAIDServer-*
        rm linux-*
        pwd
        ls -ls
        sha256sum $bzimagename | cut -d " " -f 1 > $bzimagename.sha256
        REPO=${GITHUB_REPOSITORY##*/}
        REPO_DIR="/__w/${REPO}/${REPO}"
        git config --global --add safe.directory $REPO_DIR
    - 
      name: Commit changes
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: 'updated ${{ inputs.NAME }}'
        # file_pattern: 'bzimage'
